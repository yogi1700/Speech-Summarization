# Based on http://www.fon.hum.uva.nl/praat/manual/Script_for_listing_time_--F0_--intensity.html
#
# Pitch and intensity parameters
# male: 50, 350
# female: 75, 450
sampleStep = 0.01
minPitch = 75
maxPitch = 450


# Directory needs a final '/'
# **Both directories need to already exist**
input_directory$ = "/home/iplab/Desktop/Segments/"
output_directory$ = "/home/iplab/Desktop/Result/"

strings = Create Strings as file list... list 'input_directory$'*.wav
numberOfFiles = Get number of strings

for ifile to numberOfFiles
    selectObject: strings
    fileName$ = Get string: ifile
    Read from file: input_directory$ + fileName$
    name$ = fileName$ - ".wav"
	
	sound = selected ("Sound")
	selectObject: sound
	tmin = Get start time
	tmax = Get end time
	
	To Pitch: sampleStep, minPitch, maxPitch
	Rename: "pitch"
        vcd_frames = Count voiced frames
	tot_frames = Get number of frames
	vcd2tot_frames = vcd_frames / tot_frames
	
	selectObject: sound
	To Intensity: minPitch, sampleStep, maxPitch 
	Rename: "intensity"
	it_avg = 0;
        pi_avg = 0;
        seg1 = 0;
        seg2 = 0;
	for i to (tmax-tmin)/sampleStep
    		time = tmin + i * sampleStep
    		selectObject: "Pitch pitch"
    		pitch = Get value at time: time, "Hertz", "Linear"
    		selectObject: "Intensity intensity"
    		intensity = Get value at time: time, "Cubic"
#    		appendFileLine: "'output_directory$''name$'.txt", fixed$ (time, 2), ",", fixed$ (pitch, 3), ",", fixed$ (intensity, 3)
                
                if intensity != undefined
                it_avg = it_avg + intensity
                seg1 = seg1 + 1;
                endif
                
                if pitch != undefined
                pi_avg = pi_avg + pitch
                seg2 = seg2 + 1;
                endif
              
              
	endfor
        
        it_avg = it_avg / seg1
        pi_avg = pi_avg / seg2
        
   #   appendFileLine: "'output_directory$''name$'.txt", fixed$ (it_avg, 2), ",", fixed$ (vcd2tot_frames, 3)
       appendFileLine: "'output_directory$'output.txt", name$,"	", fixed$ (it_avg, 2), "	", fixed$ (tmax - tmin , 2),"	", fixed$ (pi_avg , 2)

   #       appendFileLine: "'output_directory$'output.txt", name$,"	", fixed$ (pi_avg , 2)

	# Cleanup

	selectObject: "Pitch pitch"
	Remove

	selectObject: "Intensity intensity"
	Remove

	selectObject: sound
	Remove

endfor

selectObject: strings
Remove
